services:
 immich-server:
  image: ghcr.io/immich-app/immich-server:release
  container_name: immich-server-by-compose
  ports:
   - "1234:2283"
  volumes:
   - /mnt/data/photos/uploads:/usr/src/app/upload
  env_file: 
   - .env
  environment:
   DB_HOSTNAME: immich-postgres
   DB_USERNAME: postgres
   DB_PASSWORD: password
   DB_DATABASE_NAME: immich
   IMMICH_MACHINE_LEARNING: true
   TZ: Asia/Taipei
  restart: always
  depends_on:
   - immich-postgres
   - redis

 immich-postgres:
  # 這邊不能直接使用 postgres:14 因為 immich 需要 pgvector (特殊版的樣子)
  image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0@sha256:fa4f6e0971f454cd95fec5a9aaed2ed93d8f46725cc6bc61e0698e97dba96da1
  container_name: immich-postgres-by-compose
  environment:
   POSTGRES_USER: postgres
   POSTGRES_DB: immich
   POSTGRES_PASSWORD: password
  volumes:
   - ./postgres:/var/lib/postgresql/data
  restart: always

 redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:ff21bc0f8194dc9c105b769aeabf9585fea6a8ed649c0781caeac5cb3c247884
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

 immich-machine-learning:
  container_name: immich-ML-by-compose
  # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
  # Example tag: ${IMMICH_VERSION:-release}-cuda
  image: ghcr.io/immich-app/immich-machine-learning:release
  # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
  #   file: hwaccel.ml.yml
  #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
  volumes:
    - model-cache:/cache
  env_file:
    - .env
  restart: always
  healthcheck:
    disable: false
    
 filebrowser:
  image: filebrowser/filebrowser:s6
  container_name: filebrowser-by-compose
  user: "0:0"
  volumes:
   - /mnt/data/photos/uploads:/srv
   - /mnt/data/config/filebrowser.db:/database.db
   - /mnt/data/config/settings.json:/config/settings.json
  ports:
   - "2345:8080"
  restart: unless-stopped

 cloudflared:
  image: cloudflare/cloudflared:latest
  container_name: Cloudflare-Tunnel
  restart: unless-stopped
  command: tunnel run
  env_file: 
   - .env
  environment:
    TUNNEL_TOKEN: ${CF_TOKEN}

volumes:
 immich_db:
 model-cache:
